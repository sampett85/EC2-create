pipeline {
   agent any
      stages {
        stage ('Git Checkout ') {

            steps {
                git branch: 'master',
                    credentialsId: 'gitcredentials',
                    url: 'https://github.com/sampett85/EC2-create.git'
                }
            }

		stage ('Fetching data from Dynamodb') {
		   steps {
		      sh '''

			  aws dynamodb scan --table-name userdata --output text --region us-east-2     --scan-filter '{ "ec2_application_name":{ "AttributeValueList":[ {"S":"JKS"} ],"ComparisonOperator": "EQ"} }' > output.txt
			  cat output.txt
			  cat output.txt  |grep -v "^1" |sed 's/\t/": "/g' |sed 's/^/  "/g' |sed 's/$/",/g' |sed '$s/,$//' | tr '[:upper:]' '[:lower:]' > formatted.txt
			  totalline=`cat ec2-create.json |wc -l`; sed "$totalline e cat formatted.txt" ec2-create.json > ec2-create-with-extra-params.json
			  cat ec2-create-with-extra-params.json


			  '''
			      }
            }
		stage("converting json into string") {
          steps {
            script {
              ansible_var = readFile('ec2-create-with-extra-params.json').trim()
            }
             echo "${ansible_var}"
          }
        }

		stage("ansible tower config") {
         steps {
           script {
             ansibleTower(
             towerServer: 'Prod Tower',
             templateType: 'job',
             jobTemplate: 'Simple Test',
             importTowerLogs: true,
             inventory: 'Demo Inventory',
             jobTags: '',
             skipJobTags: '',
             limit: '',
             removeColor: false,
             verbose: true,
             extraVars: "${ansible_var}"
             )
           }
         }
       }
		}
	}
